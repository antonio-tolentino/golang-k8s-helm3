# Default values for appchart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

## NGINX Ingress controller
ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    # cert-manager.io/issuer: "nameOfIssuer"
    # cert-manager.io/cluster-issuer: "nameOfClusterIssuer"
  hosts: []
    #- host: chart-example.local
    #  paths: 
    #    - /     
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## istio service mesh
istio:
  enabled: false
  redirect: true
  hosts: 
    - host: chart-example.local
    - host: chart-example1.local
  paths: []
    #- /
  certManager:
    enabled: false
    issuer:
      name: letsencrypt-prod
      kind: ClusterIssuer
    dnsNames: 
      - name: chart-example.local
      - name: chart-example1.local
  tls: 
    enabled: true
    ## localCert = true secret with certificate and private key must be defined in credentialName
    ## localCert = false certificate and private key is expected to be attached to Load Balancer
    localCert: true
    credentialName: chart-example-tls
    

resources: {}
  #uncomment the following lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #limits:
  #  cpu: 100m
  #  memory: 128Mi
  #requests:
  #  cpu: 100m
  #  memory: 128Mi

containerPort: 8080

readinessProbe: {}
#readinessProbe:
#  failureThreshold: 5
#  httpGet:
#    path: /api/health
#    port: http
#    scheme: HTTP
#  initialDelaySeconds: 60
#  periodSeconds: 10
#  successThreshold: 1
#  timeoutSeconds: 1


livenessProbe: {}
#livenessProbe:
#  failureThreshold: 5
#  httpGet:
#    path: /api/health
#    port: http
#    scheme: HTTP
#  initialDelaySeconds: 60
#  periodSeconds: 10
#  successThreshold: 1
#  timeoutSeconds: 1
  


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


## Application secrets
secret: 
  enabled: false
  name: secret-example

## Application configmap
configMap:
  enabled: false
  name: configmap-example
  keys: 
   logFile: /tmp/output.log
   logSize: 10m

## Application environment variables
podEnvironment: []
#podEnvironment:
#  - name: LOG_LEVEL
#    value: "INFO"
#  - name: LOG_FILE
#    valueFrom:
#      configMapKeyRef:
#        key: logFile
#        name: configmap-example
#  - name: DB_HOST
#    valueFrom:
#      secretKeyRef:
#        key: host
#        name: secret-example



nodeSelector: {}

tolerations: []

affinity: {}


dataDog:
  enabled: false
  ## dataDogUniqueID is appended to service and env labels to identify same application in differents projects
  dataDogUniqueID: "my-project-unique-id"
  podEnvironment:
    - name: DD_AGENT_HOST
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: DD_ENV
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['tags.datadoghq.com/env']
    - name: DD_SERVICE
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['tags.datadoghq.com/service']
    - name: DD_VERSION
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['tags.datadoghq.com/version']
    - name: DD_PROFILING_ENABLED
      value: "true"
    - name: DD_LOGS_INJECTION
      value: "true"
    - name: DD_TRACE_SAMPLE_RATE
      value: "1"